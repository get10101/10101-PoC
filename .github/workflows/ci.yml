name: CI

on:
  pull_request:
  push:
    branches:
      - "staging"
      - "main"

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dprint/check@v2.1

  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all commits on current main
        run: git fetch origin main
      - name: Log all commits we will analyze
        run: git log --pretty=format:%s origin/main..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/main..HEAD | grep -zv squash!

  clippy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2.0.1
      - run: cargo clippy --all-targets -- -D warnings

  lint-flutter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Install dependencies
        run: flutter pub get
      - name: Verify flutter formatting
        run: flutter format --output=none --set-exit-if-changed --line-length 100 .
      - name: Analyze flutter code
        run: flutter analyze --fatal-infos

  # See: https://betterprogramming.pub/test-flutter-apps-on-android-with-github-actions-abdba2137b4
  flutter-android-test:
    name: Flutter (Android) integration test
    strategy:
      matrix:
        device:
          - "pixel"
          - "Nexus 6"
      fail-fast: false
    uses: ./.github/workflows/flutter_android_test.yml
    with:
      device: ${{ matrix.device }}

  # Use an "accummulation" job here because bors often fails (timeouts)
  ci-success:
    name: CI
    needs:
      # TODO: Add flutter-android-test when bors is stable
      - formatting
      - lint-commits
      - clippy
      - lint-flutter
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    steps:
      - name: CI succeeded
        run: exit 0
