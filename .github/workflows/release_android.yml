name: Release Android APK

on: workflow_dispatch

env:
  FLUTTER_VERSION: "3.3.1"

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      # #499, https://github.com/actions/virtual-environments/issues/5595
      - name: Configure ndk
        run: |
          ANDROID_HOME=$HOME/Library/Android/sdk
          SDKMANAGER=$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager

          echo y | $SDKMANAGER "ndk;21.4.7075529"

          ln -sfn $ANDROID_HOME/ndk/21.4.7075529 $ANDROID_HOME/ndk-bundle

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "8.x" # "betterprogramming.pub" says must be java "8"
          cache: "gradle"

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.3.1"
          architecture: x64

      - name: Install FFI bindings
        run: cargo install flutter_rust_bridge_codegen

      - name: Generate FFI bindings
        run: make gen

      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rust/target
          key: ${{ runner.os }}-cargo-integrate-android-${{ hashFiles('**/Cargo.lock') }}-${{ steps.checkout.outputs.rustc_hash }}

      - name: Add Rust targets
        run: rustup target add armv7-linux-androideabi aarch64-linux-android

      - name: Install `cargo-ndk`
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: cargo install cargo-ndk --force

      - name: Build Rust lib
        working-directory: ./rust
        run: cargo ndk -o ../android/app/src/main/jniLibs build

      - name: Parse version from pubspec.yaml
        id: version
        uses: jbutcher5/read-yaml@1.6
        with:
          file: "pubspec.yaml"
          key-path: '["version"]'

      - name: Build Android APK release
        id: build
        run: |
          mkdir keystore
          echo $ENCODED_KEYSTORE | base64 -d > keystore/upload-keystore.jks
          BUILD_NAME=${{ steps.version.outputs.data }}
          BUILD_NUMBER=$(git rev-list HEAD --count)
          flutter build apk --build-name=$BUILD_NAME --build-number=$BUILD_NUMBER --release
          mv build/app/outputs/flutter-apk/app.apk build/app/outputs/flutter-apk/tentenone-$BUILD_NAME.apk
          echo "APK_NAME=$(echo tentenone-$BUILD_NAME.apk)" >> $GITHUB_OUTPUT
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_UPLOAD_SIGNING_STORE_PASSWORD }}
          ENCODED_KEYSTORE: ${{ secrets.ANDROID_UPLOAD_KEYSTORE }}

      - name: Upload APK to Github Packages
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifacts
          path: build/app/outputs/flutter-apk/${{steps.build.outputs.APK_NAME}}
